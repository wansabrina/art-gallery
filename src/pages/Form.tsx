import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.scss'
import Navbar from './components/Navbar'
import Footer from './components/Footer'
import { useState } from 'react'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const [name, setName] = useState('');

  const [formData, setFormData] = useState({
    name: "",
    email: "",
  });

  const [formErrors, setFormErrors] = useState({
    name: "",
    email: "",
  });
  
  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setName(event.target.value);
  };

  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = event.target;

    setFormData((prevState) => ({
      ...prevState,
      [name]: value,
    }));

    if (name === "name") {
      if (!value) {
        setFormErrors((prevState) => ({
          ...prevState,
          name: "Name is required",
        }));
      } else {
        setFormErrors((prevState) => ({
          ...prevState,
          name: "",
        }));
      }
    }

    if (name === "email") {
      if (!value) {
        setFormErrors((prevState) => ({
          ...prevState,
          email: "Email is required",
        }));
      } else if (!/\S+@\S+\.\S+/.test(value)) {
        setFormErrors((prevState) => ({
          ...prevState,
          email: "Email is invalid",
        }));
      } else {
        setFormErrors((prevState) => ({
          ...prevState,
          email: "",
        }));
      }
    }
  };


  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    console.log("Submitted:", name);
  };
  return (
    <>
      <Head>
        <title>Van Gogh Library</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>
      <Navbar/>
      <section className='bg-yellow-100 pt-20'>
      <form onSubmit={handleSubmit}>
        <label htmlFor="name">Name:</label>
        <input
          type="text"
          id="name"
          name="name"
          value={formData.name}
          onChange={handleInputChange}
        />
        {formErrors.name && <div>{formErrors.name}</div>}

        <label htmlFor="email">Email:</label>
        <input
          type="email"
          id="email"
          name="email"
          value={formData.email}
          onChange={handleInputChange}
        />
        {formErrors.email && <div>{formErrors.email}</div>}

        <button type="submit">Submit</button>
      </form>
      </section>
      <Footer/>
    </>
  )
}
